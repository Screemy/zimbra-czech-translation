# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016 Synacor, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
# 
# cs_CZ generated on Mo May 19 11:51:15 PST 2008
currencyCode = CZK
currencySymbol = K\u010d
eraAD = po Kr.
eraBC = p\u0159.Kr.
firstDayOfWeek = 2
formatDateFull = EEEE, d. MMMM yyyy
formatDateLong = d. MMMM yyyy
formatDateMedium = d.M.yyyy
formatDateShort = d.M.yy
formatDateNumber=d/M/yyyy
formatDateTime = {0} {1}
formatDateTimeShort = d/M/yy HH:mm
formatNumber = #.##0,###
formatNumberCurrency = \u00a4 #,##0.00
formatNumberInteger = #,##0
formatNumberPercent = #,##0 %
formatTimeFull = H:mm:ss z
formatTimeLong = H:mm:ss z
formatTimeMedium = H:mm:ss
formatTimeShort = H:mm

# Add as many regexes as you'd like (without holes in the numbering sequence). They will in turn test the user input until a match is found.
# The first capturing group of the regex is the hours, the second is the minutes, and the third (optional) specifies am or pm time. Just leave it out if you don't need it.
# When the optional ampm group is present in a match, 12 hours will be converted to 0 hours, and when the matched value is present in 
# the parseTimePMChars value, 12 hours will be added to the time.
parseTime1 = (\\d\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime2 = (\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime3 = (\\d{1,2})(\\d*)\\s*([ap])?
parseTimePMChars = pP

monthAprLong = Duben
monthAprMedium = Dub
monthAugLong = Srpen
monthAugMedium = Srp
monthDecLong = Prosinec
monthDecMedium = Pros
monthFebLong = \u00danor
monthFebMedium = \u00dano
monthJanLong = Leden
monthJanMedium = Led
monthJulLong = \u010cervenec
monthJulMedium = \u010crc
monthJunLong = \u010cerven
monthJunMedium = \u010cer
monthMarLong = B\u0159ezen
monthMarMedium = B\u0159e
monthMayLong = Kv\u011bten
monthMayMedium = Kv\u011b
monthNovLong = Listopad
monthNovMedium = Lis
monthOctLong = \u0158\u00edjen
monthOctMedium = \u0158\u00edj
monthSepLong = Z\u00e1\u0159\u00ed
monthSepMedium = Z\u00e1\u0159
numberInfinity = \u221e
numberNaN = \ufffd
numberSeparatorDecimal = ,
numberSeparatorGrouping = \u00a0
numberSeparatorMoneyDecimal = ,
numberSignMinus = -
numberSignPerMill = \u2030
numberSignPercent = %
numberZero = 0
periodAm = dop.
periodPm = odp.
weekdayFriLong = P\u00e1tek
weekdayFriMedium = P\u00e1
weekdayMonLong = Pond\u011bl\u00ed
weekdayMonMedium = Po
weekdaySatLong = Sobota
weekdaySatMedium = So
weekdaySunLong = Ned\u011ble
weekdaySunMedium = Ne
weekdayThuLong = \u010ctvrtek
weekdayThuMedium = \u010ct
weekdayTueLong = \u00dater\u00fd
weekdayTueMedium = \u00dat
weekdayWedLong = St\u0159eda
weekdayWedMedium = St

